'''
Created on Jan 5, 2017

@author: Alexandre Day
'''
import numpy as np

def data_to_binary(X,tmp_binfile="cpp/.tmp.dat",delimiter=None):
    """
    Purpose:
        Writes it in binary format in default file 'cpp/.tmp.dat' for tsne c++ exec. to use.
    """
    print("Saving data in %s"%tmp_binfile)
    output_file=open(tmp_binfile,'wb')
    from array import array
    float_array = array('d', X.flatten())
    float_array.tofile(output_file)
    output_file.close()

def run_tsne_command_line(command_str):
    """
    Left it here ....... 
    Purpose:
        Run C++ exe from python with stdout output generated by exexutable printed to screen.
        This code is an excerpt from bhtsne.py on (https://github.com/lvdmaaten/bhtsne):
        Authors:    Pontus Stenetorp    <pontus stenetorp se>
                    Philippe Remy       <github: philipperemy>
        
    """
    
    from subprocess import Popen
    from sys import stderr, stdin, stdout
    from os import devnull
        
    with open(devnull, 'w') as dev_null:
    bh_tsne_p = Popen((abspath(BH_TSNE_BIN_PATH), ), cwd=workdir,
        # bh_tsne is very noisy on stdout, tell it to use stderr
                #   if it is to print any output
                stdout=stderr if verbose else dev_null)
        bh_tsne_p.wait()
        assert not bh_tsne_p.returncode, ('ERROR: Call to bh_tsne exited '
                'with a non-zero return code exit status, please ' +
                ('enable verbose mode and ' if not verbose else '') +
                'refer to the bh_tsne output for further details')
        
    
    
    